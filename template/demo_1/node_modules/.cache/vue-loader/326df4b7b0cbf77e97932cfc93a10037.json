{"remainingRequest":"/Users/jyothish/Documents/stellar-vue-free/template/demo_1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jyothish/Documents/stellar-vue-free/template/demo_1/src/pages/samples/e-commerce/project-list.vue?vue&type=template&id=092ef144&","dependencies":[{"path":"/Users/jyothish/Documents/stellar-vue-free/template/demo_1/src/pages/samples/e-commerce/project-list.vue","mtime":1603775091221},{"path":"/Users/jyothish/Documents/stellar-vue-free/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/stellar-vue-free/template/demo_1/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/stellar-vue-free/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/stellar-vue-free/template/demo_1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}